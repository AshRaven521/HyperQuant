<UserControl x:Class="HyperQuantUI.View.RESTCandleView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HyperQuantUI.View" 
             xmlns:viewmodel="clr-namespace:HyperQuantUI.ViewModel.REST"
             d:DataContext="{d:DesignInstance Type=viewmodel:RESTCandleViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="650"
             d:DesignWidth="800"
             Background="White">
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="0.1*"/>
            <RowDefinition Height="0.8*"/>
        </Grid.RowDefinitions>

        <DataGrid 
            x:Name="candlesGrid"
            ItemsSource="{Binding Candles,
                        UpdateSourceTrigger=PropertyChanged}"
            AutoGenerateColumns="False"
            Grid.Column="1"
            Grid.Row="1"
            Margin="0, 20, 0, 0">

            <DataGrid.Columns>

                <DataGridTextColumn
                    Header="OpenTime"
                    Width="0.25*" 
                    x:Name="candleOpenTimeColumn"
                    IsReadOnly="True"
                    Binding="{Binding OpenTime, 
                                NotifyOnTargetUpdated=True,
                                UpdateSourceTrigger=PropertyChanged,
                                StringFormat=d}"
            />

                <DataGridTextColumn
                    Header="Open"
                    Width="0.2*"
                    x:Name="openColumn"
                    IsReadOnly="True"
                    Binding="{Binding Open,
                                NotifyOnTargetUpdated=True,
                                UpdateSourceTrigger=PropertyChanged}"/>

                <DataGridTextColumn
                    Header="Close"
                    Width="0.2*"
                    x:Name="closeColumn"
                    IsReadOnly="True"
                    Binding="{Binding Close,
                                NotifyOnTargetUpdated=True,
                                UpdateSourceTrigger=PropertyChanged}"/>

                <DataGridTextColumn
                    Header="High"
                    Width="0.2*"
                    x:Name="highColumn"
                    IsReadOnly="True"
                    Binding="{Binding High,
                                NotifyOnTargetUpdated=True,
                                UpdateSourceTrigger=PropertyChanged}"/>

                <DataGridTextColumn
                    Header="Low"
                    Width="0.2*"
                    x:Name="lowColumn"
                    IsReadOnly="True"
                    Binding="{Binding Low,
                                NotifyOnTargetUpdated=True,
                                UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn
                    Header="Volume"
                    Width="0.2*"
                    x:Name="volumeColumn"
                    IsReadOnly="True"
                    Binding="{Binding Volume,
                                NotifyOnTargetUpdated=True,
                                UpdateSourceTrigger=PropertyChanged}"/>

            </DataGrid.Columns>

        </DataGrid>

        <UniformGrid
            x:Name="candleUIElementsPanel"
            Grid.Row="0"
            Rows="2">

            
            <Label 
                Content="Pair: "/>

            <TextBox 
                 x:Name="candlePairTextBox"
                 MaxLength="10"
                 Width="130"
                 Margin="0, 2, 0, 5"
                 Text="{Binding PairValue,
                        Mode=TwoWay,
                        UpdateSourceTrigger=PropertyChanged}"/>

            <Label
                Content="Period in seconds: "/>

            <ComboBox
                x:Name="queryParamSelector"
                ItemsSource="{Binding QueryParams}"
                SelectedItem="{Binding SelectedQueryParam,
                                Mode=OneWayToSource}"
                Width="60"
                Margin="0, 5, 0, 0"/>

            <Label
                Content="Start Date:"/>

            <DatePicker
                Height="30"
                IsTodayHighlighted="True"
                SelectedDate="{Binding SelectedStartDate,
                                Mode=OneWayToSource}"
                Margin="0, 0, 5, 3"/>

            <Label
                Content="End Date:"/>

            <DatePicker
                IsTodayHighlighted="True"
                SelectedDate="{Binding SelectedEndDate,
                                Mode=OneWayToSource}"
                Margin="0, 3, 0, 0"/>

            <Label 
                Content="Maximum count:"/>

            <TextBox 
                 Name="candlesLimitTextBox"
                 MaxLength="5"
                 Width="60"
                 Text="{Binding MaxCandlesCountValue,
                        Mode=TwoWay,
                        UpdateSourceTrigger=PropertyChanged}"
                Margin="0, 5, 0, 2"/>


            <Button 
                x:Name="getCandlesButton"
                Content="Show Candles"
                Command="{Binding GetCandlesCommand}"
                Margin="0, 5, 0, 5"/>
        </UniformGrid>

    </Grid>
</UserControl>
